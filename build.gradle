buildscript {
    repositories {
        mavenCentral()
        jcenter()
        maven { url "https://dl.bintray.com/jetbrains/kotlin-native-dependencies" }
    }
    dependencies {
        classpath "com.moowork.gradle:gradle-node-plugin:+"
        classpath "com.jfrog.bintray.gradle:gradle-bintray-plugin:+"
    }
}

plugins {
    id 'org.jetbrains.kotlin.multiplatform' version '1.3.50'
    id 'maven-publish'
}

repositories {
    mavenCentral()
}

group project.property("group")
version project.property("version")

import org.jetbrains.kotlin.gradle.tasks.FatFrameworkTask

kotlin {

    targets {

        jvm()
        js("js") {
            browser {
            }
            nodejs {
            }
        }

        iosArm64("ios64")
        iosX64("iosSimulator64")

        configure([ios64, iosSimulator64]) {
            binaries.framework {
                baseName = "MultiCore"
            }
        }

        macosX64("macos")
    }

    sourceSets {
        commonMain {
            dependencies {
                implementation kotlin('stdlib-common')
                implementation kotlin('reflect')
            }
        }
        commonTest {
            dependencies {
                implementation kotlin('test-common')
                implementation kotlin('test-annotations-common')
            }
        }
        jvmMain {
            dependencies {
                implementation kotlin('stdlib-jdk8')
            }
        }
        jvmTest {
            dependencies {
                implementation kotlin('test')
                implementation kotlin('test-junit')
            }
        }
        jsMain {
            dependencies {
                implementation kotlin('stdlib-js')
            }
        }
        jsTest {
            dependencies {
                implementation kotlin('test-js')
            }
        }
        macosMain { }
        macosTest { }
        iosMain { }
        iosSimulator64Main {
            dependsOn iosMain
        }
        ios64Main {
            dependsOn iosMain
        }
        iosTest { }
    }

    // Create a task building a fat framework.
    task debugFatFramework(type: FatFrameworkTask) {
        // The fat framework must have the same base name as the initial frameworks.
        baseName = "Time"

        // The default destination directory is '<build directory>/fat-framework'.
        destinationDir = file("$buildDir/universal/debug")

        // Specify the frameworks to be merged.
        from(
                targets.ios64.binaries.getFramework("DEBUG"),
                targets.iosSimulator64.binaries.getFramework("DEBUG")
        )
    }
}

apply from: rootProject.file("gradle/publish.gradle")
apply from: rootProject.file('gradle/node-js.gradle')
apply from: rootProject.file('gradle/test-mocha-js.gradle')

task iosTest {
    def device = project.findProperty("iosDevice")?.toString() ?: "iPhone 8"
    dependsOn 'linkDebugTestIos'
    group = JavaBasePlugin.VERIFICATION_GROUP
    description = "Runs tests for target 'ios' on an iOS simulator"

    doLast {
        def binary = kotlin.targets.ios.binaries.getTest("DEBUG").outputFile
        exec {
            commandLine 'xcrun', 'simctl', 'spawn', device, binary.absolutePath
        }
    }
}