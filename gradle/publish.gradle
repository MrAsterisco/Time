import java.nio.file.Files
import java.nio.file.Paths

apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'
apply from: project.rootProject.file('gradle/pom.gradle')

if (Files.exists(Paths.get("$project.rootDir/local.properties"))) {
    def localProperties = new Properties()
    localProperties.load(new FileInputStream("$project.rootDir/local.properties"))
    localProperties.each { prop -> project.ext.set(prop.key, prop.value) }
}

publishing {
    repositories {
        maven {
            url = "https://${project.bintrayOrg}.bintray.com/${project.bintrayRepository}"
        }
    }

    publications.all { publication ->
        pom.withXml(configureMavenCentralMetadata)
    }
}

bintray {
    user = project.hasProperty('bintrayUser') ? project.property('bintrayUser') : System.getenv('BINTRAY_USER')
    key = project.hasProperty('bintrayApiKey') ? project.property('bintrayApiKey') : System.getenv('BINTRAY_API_KEY')
    publish = true
    override = true

    pkg {
        userOrg = project.bintrayOrg
        repo = project.bintrayRepository
        name = project.bintrayPackage
        licenses = ['MIT']
        vcsUrl = vcs
        version {
            name = project.version
            vcsTag = project.version
            released = new Date()
        }
    }
}

bintrayUpload.dependsOn publishToMavenLocal

// This is for easier debugging of bintray uploading problems
bintrayUpload.doFirst {
    publications = project.publishing.publications.findAll {
        !it.name.contains('-test')
    }.collect {
        println("Uploading artifact '$it.groupId:$it.artifactId:$it.version' from publication '$it.name'")
        it.name
    }
}
